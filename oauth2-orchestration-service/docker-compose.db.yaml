services:
  cisauth-db:
    image: postgres:latest
    restart: always
    container_name: cisauth-db
    env_file:
      - docker-compose-local.env
    ports:
      - '5432:5432'
    volumes:
      - ./sql:/sql
      - cisauth-volume:/var/lib/postgresql/data/
    networks:
      - cisauth-network

  hydra-migrate:
    container_name: hydra-migrate
    image: oryd/hydra:v2.0.3
    command:
      migrate -c /etc/config/hydra/hydra.yml sql -e --yes
    volumes:
      - type: bind
        source: ./contrib/quickstart/${ENVIRONMENT}
        target: /etc/config/hydra
    restart: on-failure
    environment:
      - DSN=postgres://hydra:secret@cisauth-db:5432/hydra?sslmode=disable&max_conns=20&max_idle_conns=4
    depends_on:
      - cisauth-db
    networks:
      - cisauth-network

  hydra:
    container_name: hydra
    image: oryd/hydra:v2.0.3
    ports:
      - "4444:4444" # Public port
      - "4445:4445" # Admin port
      - "5555:5555" # Port for hydra token user
    volumes:
      - type: bind
        source: ./contrib/quickstart/${ENVIRONMENT}
        target: /etc/config/hydra
    command:
      serve -c /etc/config/hydra/hydra.yml all --dev
    restart: unless-stopped
    environment:
      - TTL_ACCESS_TOKEN=720h
      - TTL_ID_TOKEN=720h
      - DSN=postgres://hydra:secret@cisauth-db:5432/hydra?sslmode=disable&max_conns=20&max_idle_conns=4
      - SERVE_PUBLIC_CORS_ENABLED=true
      - SERVE_PUBLIC_CORS_ALLOWED_METHODS=POST,GET,PUT,DELETE
      - SERVE_ADMIN_CORS_ENABLED=true
      - SERVE_ADMIN_CORS_ALLOWED_METHODS=POST,GET,PUT,DELETE
    depends_on:
      - cisauth-db
    networks:
      - cisauth-network

  consent:
    environment:
      - HYDRA_ADMIN_URL=http://hydra:4445
    image: oryd/hydra-login-consent-node:latest
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - cisauth-network

  cisauth-cache:
    container_name: cisauth-cache
    image: redis:latest
    ports:
      - "6379:6379"
    command: ["redis-server"]
    networks:
      - cisauth-network

  user-service:
    image: harishsivakumar/user-management-service:latest
    container_name: user-service
    platform: linux/amd64
    networks:
      - cisauth-network
    ports:
      - "8080:8080"
    depends_on:
      user-migrate:
        condition: service_completed_successfully
    volumes:
      - ./configs/user-config.json:/config/config.json
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

  user-migrate:
    image: harishsivakumar/ums-migrate:latest
    container_name: ums-migrate
    platform: linux/amd64
    depends_on:
      - cisauth-db
    networks:
      - cisauth-network
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - SECRET_KEY=dev/cisauth

  token-service:
    image: harishsivakumar/token-management-service:latest
    container_name: token-service
    depends_on:
      - cisauth-cache
    networks:
      - cisauth-network
    ports:
      - "5052:5052"
    volumes:
      - ./configs/token-config.json:/config/serviceconfig.json
    platform: linux/amd64
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

  communication-service:
    image: harishsivakumar/token-management-service:latest
    container_name: token-service
    depends_on:
      - cisauth-cache
    networks:
      - cisauth-network
    ports:
      - "5052:5052"
    volumes:
      - ./configs/communication-config.json:/config/config.json
    platform: linux/amd64
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

networks:
  cisauth-network:
    external: true

volumes:
  cisauth-volume:
